#IncludeRegexLine: ^[ 	]*[#%][ 	]*(include|import)[ 	]*[<"]([^">]+)([">])

#IncludeRegexScan: ^.*$

#IncludeRegexComplain: ^$

#IncludeRegexTransform: 

../include/quetzal/coalescence.h
coalescence/policies/merger.h
../include/quetzal/coalescence/policies/merger.h
coalescence/policies/distance_to_parent.h
../include/quetzal/coalescence/policies/distance_to_parent.h
coalescence/containers/Tree.h
../include/quetzal/coalescence/containers/Tree.h
coalescence/containers/Forest.h
../include/quetzal/coalescence/containers/Forest.h

../include/quetzal/coalescence/algorithms/merge.h
algorithm
-
iterator
-
cassert
-
functional
-
type_traits
-
iostream
-

../include/quetzal/coalescence/containers/Forest.h
unordered_map
-
set
-
vector
-
assert.h
../include/quetzal/coalescence/containers/assert.h

../include/quetzal/coalescence/containers/Tree.h
vector
-

../include/quetzal/coalescence/occupancy_spectrum/Generator.h
vector
-
utility
-

../include/quetzal/coalescence/occupancy_spectrum/OccupancySpectrumDistribution.h
Generator.h
../include/quetzal/coalescence/occupancy_spectrum/Generator.h
random
-
utility
-
vector
-
cmath
-
assert.h
-
iostream
-
boost/multiprecision/cpp_int.hpp
-
boost/multiprecision/cpp_dec_float.hpp
-
boost/random.hpp
-

../include/quetzal/coalescence/occupancy_spectrum/memoize.h
OccupancySpectrumDistribution.h
../include/quetzal/coalescence/occupancy_spectrum/OccupancySpectrumDistribution.h
unordered_map
-
functional
-

../include/quetzal/coalescence/occupancy_spectrum/spectrum_creation_policy.h
OccupancySpectrumDistribution.h
../include/quetzal/coalescence/occupancy_spectrum/OccupancySpectrumDistribution.h
memoize.h
../include/quetzal/coalescence/occupancy_spectrum/memoize.h
boost/multiprecision/cpp_int.hpp
-
boost/multiprecision/cpp_dec_float.hpp
-
vector
-
random
-

../include/quetzal/coalescence/policies/distance_to_parent.h
../containers/Tree.h
../include/quetzal/coalescence/containers/Tree.h
../containers/Forest.h
../include/quetzal/coalescence/containers/Forest.h
../../simulator/simulator.h
../include/quetzal/simulator/simulator.h

../include/quetzal/coalescence/policies/merger.h
../algorithms/merge.h
../include/quetzal/coalescence/algorithms/merge.h
../occupancy_spectrum/spectrum_creation_policy.h
../include/quetzal/coalescence/occupancy_spectrum/spectrum_creation_policy.h
iterator
-
cassert
-
functional
-

../include/quetzal/demography/Flow.h
unordered_map
-
cassert
-
functional
-
algorithm
-
iostream
-

../include/quetzal/demography/History.h
Flow.h
../include/quetzal/demography/Flow.h
PopulationSize.h
../include/quetzal/demography/PopulationSize.h
strategy.h
../include/quetzal/demography/strategy.h
../random.h
../include/quetzal/random.h
vector
-
memory
-

../include/quetzal/demography/PointWithId.h

../include/quetzal/demography/PopulationSize.h
unordered_map
-
unordered_set
-
vector
-
assert.h
../include/quetzal/demography/assert.h

../include/quetzal/demography/dispersal.h
cmath
-
vector
-
unordered_map
-
random
-
boost/numeric/ublas/symmetric.hpp
-
boost/numeric/ublas/io.hpp
-
boost/numeric/ublas/matrix_proxy.hpp
-

../include/quetzal/demography/strategy.h
PointWithId.h
../include/quetzal/demography/PointWithId.h
dispersal.h
../include/quetzal/demography/dispersal.h
../utils.h
../include/quetzal/utils.h
boost/numeric/ublas/matrix_sparse.hpp
-
boost/numeric/ublas/symmetric.hpp
-
vector
-

../include/quetzal/random.h
random/DiscreteDistribution.h
../include/quetzal/random/DiscreteDistribution.h
random/TransitionKernel.h
../include/quetzal/random/TransitionKernel.h

../include/quetzal/random/DiscreteDistribution.h
assert.h
-
vector
-
random
-

../include/quetzal/random/TransitionKernel.h
assert.h
-
unordered_map
-

../include/quetzal/simulator/simulator.h
../demography/History.h
../include/quetzal/demography/History.h
../coalescence/containers/Forest.h
../include/quetzal/coalescence/containers/Forest.h
../coalescence/policies/merger.h
../include/quetzal/coalescence/policies/merger.h
map
-

../include/quetzal/utils.h
utils/matrix_operation.h
../include/quetzal/utils/matrix_operation.h
utils/sampling_scheme.h
../include/quetzal/utils/sampling_scheme.h

../include/quetzal/utils/matrix_operation.h
boost/numeric/ublas/vector.hpp
-
boost/numeric/ublas/matrix_sparse.hpp
-
boost/numeric/ublas/io.hpp
-
boost/numeric/ublas/operation.hpp
-
algorithm
-

../include/quetzal/utils/sampling_scheme.h
random
-
map
-

/home/becheler/dev/quetzal/test/unit_test/coalescence_test.cpp
boost/test/unit_test.hpp
-
quetzal/coalescence.h
-

